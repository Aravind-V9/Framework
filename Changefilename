import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

public class FilenameDateReplacer {
    public static void main(String[] args) {
        String directoryPath = "/path/to/directory";
        String newDate = "20250523";
        replaceFilenameDate(directoryPath, newDate);
    }

    public static void replaceFilenameDate(String directoryPath, String newDate) {
        File directory = new File(directoryPath);
        File[] files = directory.listFiles();

        if (files != null) {
            for (File file : files) {
                if (file.isFile()) {
                    String oldFilename = file.getName();
                    String newFilename = replaceDate(oldFilename, newDate);

                    if (!oldFilename.equals(newFilename)) {
                        Path oldPath = file.toPath();
                        Path newPath = Paths.get(directoryPath, newFilename);

                        try {
                            Files.move(oldPath, newPath, StandardCopyOption.REPLACE_EXISTING);
                            System.out.println("Renamed " + oldFilename + " to " + newFilename);
                        } catch (IOException e) {
                            System.err.println("Error renaming file: " + e.getMessage());
                        }
                    }
                }
            }
        } else {
            System.err.println("Invalid directory path: " + directoryPath);
        }
    }
public static String replaceDate(String filename, String newDate) {
    String[] parts = filename.split("\\.");
    String name = parts[0];
    String extension = "." + String.join(".", java.util.Arrays.copyOfRange(parts, 1, parts.length));

    // Extract the date part from the name (characters 12 to 19)
    int dateStartIndex = 11;
    int dateEndIndex = 19;
    String datePart = name.substring(dateStartIndex, dateEndIndex);

    // Replace the date part with the new date
    String newName = name.substring(0, dateStartIndex) + newDate + name.substring(dateEndIndex);

    // Construct the new filename
    return newName + extension;
}


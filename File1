import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DueDateCalculator {

    public static Date calculateDueDate(String term, Date invoiceDate) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(invoiceDate);

        char termType = term.charAt(0);
        int termValue = Integer.parseInt(term.substring(1));

        int maxDayInMonth;
        switch (termType) {
            case 'D':
                // No need to check, just add the days
                calendar.add(Calendar.DAY_OF_MONTH, termValue);
                break;
            case 'X':
                // Add a month
                calendar.add(Calendar.MONTH, 1);
                maxDayInMonth = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
                if (termValue > maxDayInMonth) {
                    // If the specified day doesn't exist, set it to the last day of the month
                    calendar.set(Calendar.DAY_OF_MONTH, maxDayInMonth);
                } else {
                    calendar.set(Calendar.DAY_OF_MONTH, termValue);
                }
                break;
            case 'Y':
                // Add two months
                calendar.add(Calendar.MONTH, 2);
                maxDayInMonth = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
                if (termValue > maxDayInMonth) {
                    calendar.set(Calendar.DAY_OF_MONTH, maxDayInMonth);
                } else {
                    calendar.set(Calendar.DAY_OF_MONTH, termValue);
                }
                break;
            case 'Z':
                // Add three months
                calendar.add(Calendar.MONTH, 3);
                maxDayInMonth = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
                if (termValue > maxDayInMonth) {
                    calendar.set(Calendar.DAY_OF_MONTH, maxDayInMonth);
                } else {
                    calendar.set(Calendar.DAY_OF_MONTH, termValue);
                }
                break;
            default:
                throw new IllegalArgumentException("Invalid term: " + term);
        }

        return calendar.getTime();
    }

    public static void main(String[] args) throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date invoiceDate = dateFormat.parse("26/01/2023");

        String term = "X31"; // Replace with the desired term (e.g., X31, Y15, D30, etc.)

        Date dueDate = calculateDueDate(term, invoiceDate);
        System.out.println("Due Date: " + dateFormat.format(dueDate));
    }
}
